
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.sql.Date;
import java.sql.ResultSet;
import java.time.LocalDate;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author chizi
 */
public class headOfUnitHome extends javax.swing.JFrame {

    env env = new env();
    public String HoUName;
    /**
     * Creates new form headOfUnitHome
     */
    public headOfUnitHome(String name) {
        initComponents();
        setIconImage();
        jLabel18.setVisible(false);
        jTextField13.setVisible(false);
        jButton5.setVisible(false);   
        jTable3.setVisible(false);
        jScrollPane4.setVisible(false);
        jTable5.setVisible(false);
        jScrollPane6.setVisible(false);
        jScrollPane3.setBounds(100, 150, 400, 400);
        refreshTable();
        HoUName = name;
        setIcon();
        getInsights();
        
        orderDashboardRT odrt = new orderDashboardRT();
        Thread t = new Thread(odrt);
        t.start();
        HoUMenuRefresh hmr = new HoUMenuRefresh();
        Thread tt = new Thread(hmr);
        tt.start();
        /*
        HoUandKitchenRTNotification rtn = new HoUandKitchenRTNotification();
        Thread t3 = new Thread(rtn);
        t3.start();
        */
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(68, 41, 19));
        jTabbedPane1.setForeground(new java.awt.Color(226, 209, 194));
        jTabbedPane1.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(68, 41, 19));
        jPanel1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        jLabel7.setBackground(new java.awt.Color(93, 64, 55));
        jLabel7.setFont(new java.awt.Font("OCR A Extended", 1, 45)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(250, 243, 224));
        jLabel7.setText("X");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 41, 35), 3));
        jLabel7.setOpaque(true);
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel7MouseExited(evt);
            }
        });

        jTable2.setBackground(new java.awt.Color(226, 209, 194));
        jTable2.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ORDER ID", "TOTAL PRICE", "PAYMENT METHOD", "ORDER STATUS", "ORDER DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setShowGrid(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jComboBox3.setBackground(new java.awt.Color(226, 209, 194));
        jComboBox3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jComboBox3.setForeground(new java.awt.Color(68, 41, 19));
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Orders", "Staff Activities" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jTable3.setBackground(new java.awt.Color(226, 209, 194));
        jTable3.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STAFF NAME", "ROLE", "ACTION", "DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable3);

        jTable5.setBackground(new java.awt.Color(226, 209, 194));
        jTable5.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MENU ITEM", "PORTIONS ORDERED", "PRICE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(jTable5);

        jComboBox4.setBackground(new java.awt.Color(226, 209, 194));
        jComboBox4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jComboBox4.setForeground(new java.awt.Color(68, 41, 19));
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Order ID", "Total Price", "Payment Method", "Order Status", "Date" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(226, 209, 194));
        jLabel15.setText("DASHBOARD");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(328, 328, 328)
                                .addComponent(jLabel15))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DASHBOARD", jPanel1);

        jPanel4.setBackground(new java.awt.Color(68, 41, 19));
        jPanel4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        jLabel10.setBackground(new java.awt.Color(93, 64, 55));
        jLabel10.setFont(new java.awt.Font("OCR A Extended", 1, 45)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(250, 243, 224));
        jLabel10.setText("X");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 41, 35), 3));
        jLabel10.setOpaque(true);
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel10MouseExited(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(226, 209, 194));
        jTable1.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MENU ITEM", "AVAILABLE PORTIONS", "PRICE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton4.setBackground(new java.awt.Color(226, 209, 194));
        jButton4.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
        jButton4.setForeground(new java.awt.Color(93, 64, 55));
        jButton4.setText("RESET PORTTONS");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(226, 209, 194));
        jButton5.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(93, 64, 55));
        jButton5.setText("SET PRICE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(226, 209, 194));
        jLabel18.setText("New Price:");

        jTextField13.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N

        jButton6.setBackground(new java.awt.Color(226, 209, 194));
        jButton6.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
        jButton6.setForeground(new java.awt.Color(93, 64, 55));
        jButton6.setText("UPDATE PRICE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(226, 209, 194));
        jLabel27.setText("MENU");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton6)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(11, 11, 11))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(436, 436, 436)
                        .addComponent(jLabel27)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel27)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5)))))
                .addContainerGap(235, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("MENU", jPanel4);

        jPanel2.setBackground(new java.awt.Color(68, 41, 19));
        jPanel2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(93, 64, 55));
        jLabel8.setFont(new java.awt.Font("OCR A Extended", 1, 45)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(250, 243, 224));
        jLabel8.setText("X");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 41, 35), 3));
        jLabel8.setOpaque(true);
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel8MouseExited(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(226, 209, 194));
        jPanel7.setForeground(new java.awt.Color(93, 64, 55));

        jPanel8.setBackground(new java.awt.Color(226, 209, 194));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 41, 19), 3));
        jPanel8.setForeground(new java.awt.Color(93, 64, 55));

        jLabel6.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(93, 64, 55));
        jLabel6.setText("MOST ORDERS");

        jLabel11.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(68, 41, 19));
        jLabel11.setText("STAFF NAME");

        jLabel12.setFont(new java.awt.Font("Garamond", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(93, 64, 55));
        jLabel12.setText("__ Orders Taken");

        jLabel13.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(93, 64, 55));
        jLabel13.setText("TAKEN     ");

        jLabel14.setBackground(new java.awt.Color(226, 209, 194));
        jLabel14.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(93, 64, 55));
        jLabel14.setText(" ");
        jLabel14.setOpaque(true);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(69, 69, 69))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                            .addGap(51, 51, 51)
                            .addComponent(jLabel6)
                            .addGap(13, 13, 13))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(28, 28, 28)
                .addComponent(jLabel11)
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(226, 209, 194));
        jPanel6.setForeground(new java.awt.Color(93, 64, 55));

        jPanel5.setBackground(new java.awt.Color(226, 209, 194));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 41, 19), 3));
        jPanel5.setForeground(new java.awt.Color(93, 64, 55));

        jLabel1.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(93, 64, 55));
        jLabel1.setText("MOST ORDERED ");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(68, 41, 19));
        jLabel2.setText("MENU ITEM");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setFont(new java.awt.Font("Garamond", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(93, 64, 55));
        jLabel3.setText("__ Orders");

        jLabel5.setBackground(new java.awt.Color(226, 209, 194));
        jLabel5.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(93, 64, 55));
        jLabel5.setText(" ");
        jLabel5.setOpaque(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(226, 209, 194));
        jPanel11.setForeground(new java.awt.Color(93, 64, 55));

        jPanel12.setBackground(new java.awt.Color(226, 209, 194));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 41, 19), 3));
        jPanel12.setForeground(new java.awt.Color(93, 64, 55));

        jLabel21.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(93, 64, 55));
        jLabel21.setText("MOST ORDERS");

        jLabel22.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(68, 41, 19));
        jLabel22.setText("STAFF NAME");

        jLabel23.setFont(new java.awt.Font("Garamond", 1, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(93, 64, 55));
        jLabel23.setText("__ Orders Served");

        jLabel24.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(93, 64, 55));
        jLabel24.setText("SERVED        ");

        jLabel25.setBackground(new java.awt.Color(226, 209, 194));
        jLabel25.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(93, 64, 55));
        jLabel25.setText(" ");
        jLabel25.setOpaque(true);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel24)
                                .addComponent(jLabel21))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addGap(27, 27, 27)
                .addComponent(jLabel22)
                .addGap(29, 29, 29)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(226, 209, 194));
        jLabel4.setText("INSIGHTS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(1055, Short.MAX_VALUE)
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(431, 431, 431)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel4)
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(300, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("INSIGHTS ", jPanel2);

        jPanel3.setBackground(new java.awt.Color(68, 41, 19));
        jPanel3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        jLabel9.setBackground(new java.awt.Color(93, 64, 55));
        jLabel9.setFont(new java.awt.Font("OCR A Extended", 1, 45)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(250, 243, 224));
        jLabel9.setText("X");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 41, 35), 3));
        jLabel9.setOpaque(true);
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel9MouseExited(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(226, 209, 194));
        jLabel26.setText("REPORTS");

        jComboBox1.setBackground(new java.awt.Color(226, 209, 194));
        jComboBox1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(93, 64, 55));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Orders", "Sales", "Servings" }));

        jLabel28.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(226, 209, 194));
        jLabel28.setText("Report On:");

        jComboBox2.setBackground(new java.awt.Color(226, 209, 194));
        jComboBox2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(93, 64, 55));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly", "Yearly" }));

        jLabel29.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(226, 209, 194));
        jLabel29.setText("Timeline:");

        jButton7.setBackground(new java.awt.Color(226, 209, 194));
        jButton7.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
        jButton7.setForeground(new java.awt.Color(93, 64, 55));
        jButton7.setText("GENERATE REPORT");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(226, 209, 194));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(68, 41, 19));
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton8.setBackground(new java.awt.Color(226, 209, 194));
        jButton8.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
        jButton8.setForeground(new java.awt.Color(93, 64, 55));
        jButton8.setText("PRINT REPORT");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(226, 209, 194));
        jLabel30.setText("Start Date:");

        jDateChooser1.setBackground(new java.awt.Color(226, 209, 194));
        jDateChooser1.setForeground(new java.awt.Color(68, 41, 19));
        jDateChooser1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(1055, Short.MAX_VALUE)
                        .addComponent(jLabel9))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(352, 352, 352)
                                .addComponent(jLabel26)
                                .addGap(417, 417, 417))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addComponent(jButton7))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel28)
                                            .addComponent(jLabel29)
                                            .addComponent(jLabel30))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(649, 649, 649)
                                .addComponent(jButton8)
                                .addGap(145, 145, 145)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel30)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jButton7)
                        .addGap(66, 66, 66)))
                .addComponent(jButton8)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("REPORTS  ", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
    }
    
    private void jLabel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseExited
        jLabel9.setBackground(new Color(93, 64, 55));
        jLabel9.setForeground(new Color(250, 243, 224));
    }//GEN-LAST:event_jLabel9MouseExited

    private void jLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseEntered
        jLabel9.setBackground(Color.red);
        jLabel9.setForeground(Color.white);
    }//GEN-LAST:event_jLabel9MouseEntered

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        login Login = new login();
        Login.show();
        dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
        getInsights();
    }//GEN-LAST:event_jPanel2MouseEntered

    private void jLabel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseExited
        jLabel8.setBackground(new Color(93, 64, 55));
        jLabel8.setForeground(new Color(250, 243, 224));
    }//GEN-LAST:event_jLabel8MouseExited

    private void jLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseEntered
        jLabel8.setBackground(Color.red);
        jLabel8.setForeground(Color.white);
    }//GEN-LAST:event_jLabel8MouseEntered

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        login Login = new login();
        Login.show();
        dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jLabel18.setVisible(true);
        jTextField13.setVisible(true);
        jButton5.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (HoUName == null) {
            JOptionPane.showMessageDialog(rootPane, "No Head of Unit logged in. Please login and try again!", "WARNING!", 2);
        } else { 
            try {
                int newPrice = Integer.parseInt(jTextField13.getText());
                Date dateUpdated = new Date(System.currentTimeMillis());            
                DefaultTableModel tm = (DefaultTableModel)jTable1.getModel();
                Class.forName("com.mysql.cj.jdbc.Driver"); //Connecting and Updating the db
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafeteriamanagement", "root", env.Password);
                System.out.println("connected");
                int selectedIndex = jTable1.getSelectedRow();
                String menuItem = tm.getValueAt(selectedIndex, 0).toString();

                int confirmUpdate = JOptionPane.showConfirmDialog(null, "Are you sure you want to change the price of " + menuItem + "?", "Warning", JOptionPane.YES_NO_OPTION);

                if(confirmUpdate == JOptionPane.YES_OPTION){
                    PreparedStatement ps = con.prepareStatement("update menu SET price_per_portion=? where menu_item=?");
                    ps.setInt(1, newPrice);
                    ps.setString(2, menuItem);
                    ps.executeUpdate();

                    PreparedStatement ps3 = con.prepareStatement("insert into updated_menu(menu_item, portions_added, updated_by, action_done, date_updated) values  (?,?,?,?,?)");
                    ps3.setString(1, menuItem);
                    ps3.setInt(2, 0);
                    ps3.setString(3, HoUName);  
                    ps3.setString(4, "Cleared");  
                    ps3.setDate(5, dateUpdated);  
                    int rs3 = ps3.executeUpdate();
                    
                    JOptionPane.showMessageDialog(this, "Price of " + menuItem + " updated successfully!");
                }
                jLabel18.setVisible(false);
                jTextField13.setVisible(false);
                jTextField13.setText(null);
                jButton5.setVisible(false);
                refreshTable();
            } catch(Exception e){
                System.out.println(e);
                JOptionPane.showMessageDialog(rootPane, "Error! Unable to update price. Please try again and ensure a row is selected!");
            }
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (HoUName == null) {
            JOptionPane.showMessageDialog(rootPane, "No Head of Unit logged in. Please login and try again!", "WARNING!", 2);
        } else { 
            try {
                Date dateUpdated = new Date(System.currentTimeMillis());            
                DefaultTableModel tm = (DefaultTableModel)jTable1.getModel();
                Class.forName("com.mysql.cj.jdbc.Driver"); //Connecting and Inserting into db
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafeteriamanagement", "root", env.Password);
                System.out.println("connected");
                int selectedIndex = jTable1.getSelectedRow();
                String menuItem = tm.getValueAt(selectedIndex, 0).toString();

                int confirmUpdate = JOptionPane.showConfirmDialog(null, "Are you sure you want to set the available portions of  " + menuItem + "to 0?", "Warning", JOptionPane.YES_NO_OPTION);

                if(confirmUpdate == JOptionPane.YES_OPTION){
                    PreparedStatement ps = con.prepareStatement("update menu SET portions_available=? where menu_item=?");
                    ps.setInt(1, 0);
                    ps.setString(2, menuItem);
                    ps.executeUpdate();

                    PreparedStatement ps3 = con.prepareStatement("insert into updated_menu(menu_item, portions_added, updated_by, action_done, date_updated) values  (?,?,?,?,?)");
                    ps3.setString(1, menuItem);
                    ps3.setInt(2, 0);
                    ps3.setString(3, HoUName);  
                    ps3.setString(4, "Cleared");  
                    ps3.setDate(5, dateUpdated);  
                    int rs3 = ps3.executeUpdate();

                    JOptionPane.showMessageDialog(this, "The available portions of " + menuItem + " updated successfully!");
                }
                refreshTable();
            } catch(Exception e){
                System.out.println(e);
                JOptionPane.showMessageDialog(rootPane, "Error! Unable to update available portions. Please try again!");
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseExited
        jLabel10.setBackground(new Color(93, 64, 55));
        jLabel10.setForeground(new Color(250, 243, 224));
    }//GEN-LAST:event_jLabel10MouseExited

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered
        jLabel10.setBackground(Color.red);
        jLabel10.setForeground(Color.white);
    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        login Login = new login();
        Login.show();
        dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseExited
        jLabel7.setBackground(new Color(93, 64, 55));
        jLabel7.setForeground(new Color(250, 243, 224));
    }//GEN-LAST:event_jLabel7MouseExited

    private void jLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseEntered
        jLabel7.setBackground(Color.red);
        jLabel7.setForeground(Color.white);
    }//GEN-LAST:event_jLabel7MouseEntered

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        login Login = new login();
        Login.show();
        dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (HoUName == null) {
            JOptionPane.showMessageDialog(rootPane, "No Head of Unit logged in. Please login and try again!", "WARNING!", 2);
        } else { 
            jTextArea1.setText(null);
            int check=0;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver"); //Connecting and Inserting into db
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafeteriamanagement", "root", env.Password);
                System.out.println("connected");

                String report = jComboBox1.getSelectedItem().toString();
                String timeline = jComboBox2.getSelectedItem().toString(); 
                Date startDate = new Date(jDateChooser1.getDate().getTime());                
                LocalDate begin = startDate.toLocalDate();

                if (timeline.equalsIgnoreCase("daily")) {
                    if (report.equalsIgnoreCase("Orders")) {
                        jTextArea1.setText("ORDER ID | TOTAL PRICE | PAYMENT METHOD |  STATUS  | DATE ORDERED |          TICKET BY         |          SERVED BY       \n");
                        jTextArea1.append("---------------------------------------------------------------------------------------------------------------------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select * from orders where order_date=?");
                        ps.setDate(1, startDate);        
                        ResultSet rs = ps.executeQuery();
                        while(rs.next()){
                            jTextArea1.append("         " + rs.getInt(1) + "       |          " + rs.getInt(2) + "                |            " + rs.getString(3) + "                |     ");
                            jTextArea1.append(rs.getString(4) + "   |         " + rs.getDate(5) + "     |          " + rs.getString(6) + "          |             " + rs.getString(7) + "\n");
                            check = 1;
                        }
                        if (check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of orders taken within the selected timeline.");
                        }                        
                    } else if (report.equalsIgnoreCase("Sales")) {
                        jTextArea1.setText("ORDER ID |  PRICE   |  DATE   \n");
                        jTextArea1.append("-----------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select order_id, total_price, order_date from orders where order_date=?");
                        ps.setDate(1, startDate);     
                        ResultSet rs = ps.executeQuery();
                        PreparedStatement ps2 = con.prepareStatement("select sum(total_price) from orders where order_date=?");
                        ps2.setDate(1, startDate);     
                        ResultSet rs2 = ps2.executeQuery();
                        while(rs.next()){
                            jTextArea1.append("      " + rs.getInt(1) + "            |     " + rs.getInt(2) + "      |     " + rs.getDate(3) + "\n");
                            check = 1;
                        }
                        while(rs2.next()){
                            jTextArea1.append("\n\nTOTAL PRICE: " + rs2.getInt(1));
                        }
                        if(check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of sales made within the selected timeline.");
                        }                    
                    } else if (report.equalsIgnoreCase("Servings")) {
                        jTextArea1.setText("      ITEM                      |  QTY ORDERED        \n");
                        jTextArea1.append("-------------------------------------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select menu_item, sum(portions_ordered) from items where order_date=? group by menu_item;");
                        ps.setDate(1, startDate);     
                        ResultSet rs = ps.executeQuery();
                        PreparedStatement ps2 = con.prepareStatement("select sum(portions_ordered) from items where order_date=?");
                        ps2.setDate(1, startDate);     
                        ResultSet rs2 = ps2.executeQuery();
                        while(rs.next()){
                            String item = rs.getString(1);
                            if (item.length() < 25){
                                item = String.format("%-" + 25 + "s", item);
                            }
                            jTextArea1.append("  " + item + "  |             " + rs.getInt(2) + "\n");
                            check = 1;
                        }

                        while(rs2.next()){
                            jTextArea1.append("\n\nTOTAL NO OF ITEMS: " + rs2.getInt(1));
                        }
                        if(check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of items made within the selected timeline.");
                        }
                    }
                } else if (timeline.equalsIgnoreCase("weekly")) {
                    LocalDate end = begin.plusDays(7);
                    Date endDate = Date.valueOf(end);
                    if (report.equalsIgnoreCase("Orders")) {
                        jTextArea1.setText("ORDER ID | TOTAL PRICE | PAYMENT METHOD |  STATUS  | DATE ORDERED |          TICKET BY         |          SERVED BY       \n");
                        jTextArea1.append("---------------------------------------------------------------------------------------------------------------------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select * from orders where order_date between ? and ?");
                        ps.setDate(1, startDate); 
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        while(rs.next()){
                            jTextArea1.append("         " + rs.getInt(1) + "       |          " + rs.getInt(2) + "                |            " + rs.getString(3) + "                |     ");
                            jTextArea1.append(rs.getString(4) + "   |         " + rs.getDate(5) + "     |          " + rs.getString(6) + "          |             " + rs.getString(7) + "\n");
                            check = 1;
                        }
                        if (check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of orders taken within the selected timeline.");
                        }   
                    } else if (report.equalsIgnoreCase("Sales")) {
                        jTextArea1.setText("ORDER ID |  PRICE   |  DATE   \n");
                        jTextArea1.append("-----------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select order_id, total_price, order_date from orders where order_date between ? and ?");
                        ps.setDate(1, startDate); 
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        PreparedStatement ps2 = con.prepareStatement("select sum(total_price) from orders where order_date between ? and ?");
                        ps2.setDate(1, startDate); 
                        ps2.setDate(2, endDate); 
                        ResultSet rs2 = ps2.executeQuery();
                        while(rs.next()){
                            jTextArea1.append("      " + rs.getInt(1) + "            |     " + rs.getInt(2) + "      |     " + rs.getDate(3) + "\n");
                            check = 1;
                        }
                        while(rs2.next()){
                            jTextArea1.append("\n\nTOTAL PRICE: " + rs2.getInt(1));
                        }
                        if(check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of sales made within the selected timeline.");
                        }
                    } else if (report.equalsIgnoreCase("Servings")) {
                        jTextArea1.setText("      ITEM                      |  QTY ORDERED        \n");
                        jTextArea1.append("-------------------------------------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select menu_item, sum(portions_ordered) from items where order_date between ? and ? group by menu_item;");
                        ps.setDate(1, startDate);     
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        PreparedStatement ps2 = con.prepareStatement("select sum(portions_ordered) from items where order_date between ? and ?");
                        ps2.setDate(1, startDate);     
                        ps2.setDate(2, endDate); 
                        ResultSet rs2 = ps2.executeQuery();
                        while(rs.next()){
                            String item = rs.getString(1);
                            if (item.length() < 25){
                                item = String.format("%-" + 25 + "s", item);
                            }
                            jTextArea1.append("  " + item + "  |             " + rs.getInt(2) + "\n");
                            check = 1;
                        }
                        while(rs2.next()){
                            jTextArea1.append("\n\nTOTAL NO OF ITEMS: " + rs2.getInt(1));
                        }
                        if(check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of items made within the selected timeline.");
                        }
                    }
                } else if (timeline.equalsIgnoreCase("monthly")) {
                    LocalDate end = begin.plusDays(30);
                    Date endDate = Date.valueOf(end);
                    if (report.equalsIgnoreCase("Orders")) {
                        jTextArea1.setText("ORDER ID | TOTAL PRICE | PAYMENT METHOD |  STATUS  | DATE ORDERED |          TICKET BY         |          SERVED BY       \n");
                        jTextArea1.append("---------------------------------------------------------------------------------------------------------------------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select * from orders where order_date between ? and ?");
                        ps.setDate(1, startDate); 
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        while(rs.next()){
                            jTextArea1.append("         " + rs.getInt(1) + "       |          " + rs.getInt(2) + "                |            " + rs.getString(3) + "                |     ");
                            jTextArea1.append(rs.getString(4) + "   |         " + rs.getDate(5) + "     |          " + rs.getString(6) + "          |             " + rs.getString(7) + "\n");
                            check = 1;
                        }
                        if (check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of orders taken within the selected timeline.");
                        }   
                    } else if (report.equalsIgnoreCase("Sales")) {
                        jTextArea1.setText("ORDER ID |  PRICE   |  DATE   \n");
                        jTextArea1.append("-----------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select order_id, total_price, order_date from orders where order_date between ? and ?");
                        ps.setDate(1, startDate); 
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        PreparedStatement ps2 = con.prepareStatement("select sum(total_price) from orders where order_date between ? and ?");
                        ps2.setDate(1, startDate); 
                        ps2.setDate(2, endDate); 
                        ResultSet rs2 = ps2.executeQuery();
                        while(rs.next()){
                            jTextArea1.append("      " + rs.getInt(1) + "            |     " + rs.getInt(2) + "      |     " + rs.getDate(3) + "\n");
                            check = 1;
                        }
                        while(rs2.next()){
                            jTextArea1.append("\n\nTOTAL PRICE: " + rs2.getInt(1));
                        }
                        if(check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of sales made within the selected timeline.");
                        }
                    } else if (report.equalsIgnoreCase("Servings")) {
                        jTextArea1.setText("      ITEM                      |  QTY ORDERED        \n");
                        jTextArea1.append("-------------------------------------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select menu_item, sum(portions_ordered) from items where order_date between ? and ? group by menu_item;");
                        ps.setDate(1, startDate);     
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        PreparedStatement ps2 = con.prepareStatement("select sum(portions_ordered) from items where order_date between ? and ?");
                        ps2.setDate(1, startDate);     
                        ps2.setDate(2, endDate); 
                        ResultSet rs2 = ps2.executeQuery();
                        while(rs.next()){
                            String item = rs.getString(1);
                            if (item.length() < 25){
                                item = String.format("%-" + 25 + "s", item);
                            }
                            jTextArea1.append("  " + item + "  |             " + rs.getInt(2) + "\n");
                            check = 1;
                        }
                        while(rs2.next()){
                            jTextArea1.append("\n\nTOTAL NO OF ITEMS: " + rs2.getInt(1));
                        }
                        if(check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of items made within the selected timeline.");
                        }
                    }
                } else if (timeline.equalsIgnoreCase("yearly")) {
                    LocalDate end = begin.plusDays(365);
                    Date endDate = Date.valueOf(end);
                    if (report.equalsIgnoreCase("Orders")) {
                        jTextArea1.setText("ORDER ID | TOTAL PRICE | PAYMENT METHOD |  STATUS  | DATE ORDERED |          TICKET BY         |          SERVED BY       \n");
                        jTextArea1.append("---------------------------------------------------------------------------------------------------------------------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select * from orders where order_date between ? and ?");
                        ps.setDate(1, startDate); 
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        while(rs.next()){
                            jTextArea1.append("         " + rs.getInt(1) + "       |          " + rs.getInt(2) + "                |            " + rs.getString(3) + "                |     ");
                            jTextArea1.append(rs.getString(4) + "   |         " + rs.getDate(5) + "     |          " + rs.getString(6) + "          |             " + rs.getString(7) + "\n");
                            check = 1;
                        }
                        if (check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of orders taken within the selected timeline.");
                        }   
                    } else if (report.equalsIgnoreCase("Sales")) {
                        jTextArea1.setText("ORDER ID |  PRICE   |  DATE   \n");
                        jTextArea1.append("-----------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select order_id, total_price, order_date from orders where order_date between ? and ?");
                        ps.setDate(1, startDate); 
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        PreparedStatement ps2 = con.prepareStatement("select sum(total_price) from orders where order_date between ? and ?");
                        ps2.setDate(1, startDate); 
                        ps2.setDate(2, endDate); 
                        ResultSet rs2 = ps2.executeQuery();
                        while(rs.next()){
                            String item = rs.getString(1);
                            if (item.length() < 25){
                                item = String.format("%-" + 25 + "s", item);
                            }
                            jTextArea1.append("  " + item + "  |             " + rs.getInt(2) + "\n");
                            check = 1;
                        }
                        while(rs2.next()){
                            jTextArea1.append("\n\nTOTAL PRICE: " + rs2.getInt(1));
                        }
                        if(check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of sales made within the selected timeline.");
                        }
                    } else if (report.equalsIgnoreCase("Servings")) {
                        jTextArea1.setText("      ITEM                      |  QTY ORDERED        \n");
                        jTextArea1.append("-------------------------------------------------------------------\n");
                        PreparedStatement ps = con.prepareStatement("select menu_item, sum(portions_ordered) from items where order_date between ? and ? group by menu_item;");
                        ps.setDate(1, startDate);     
                        ps.setDate(2, endDate); 
                        ResultSet rs = ps.executeQuery();
                        PreparedStatement ps2 = con.prepareStatement("select sum(portions_ordered) from items where order_date between ? and ?");
                        ps2.setDate(1, startDate);     
                        ps2.setDate(2, endDate); 
                        ResultSet rs2 = ps2.executeQuery();
                        while(rs.next()){
                            jTextArea1.append("      " + rs.getString(1) + "        |             " + rs.getInt(2) + "\n");
                            check = 1;
                        }
                        while(rs2.next()){
                            jTextArea1.append("\n\nTOTAL NO OF ITEMS: " + rs2.getInt(1));
                        }
                        if(check == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No record of items made within the selected timeline.");
                        }
                    }
                } 
            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(rootPane, "Unable to read from DB.");
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (HoUName == null) {
            JOptionPane.showMessageDialog(rootPane, "No Head of Unit logged in. Please login and try again!", "WARNING!", 2);
        } else { 
            try {
                jTextArea1.print();
                jTextArea1.setText(null);
            } catch (PrinterException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(rootPane, "Unable to print this report.");
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        /*if (HoUName == null) {
            JOptionPane.showMessageDialog(rootPane, "No Head of Unit logged in. Please login and try again!", "WARNING!", 2);
        } else { 
        
        }*/
        String tableShowing = jComboBox3.getSelectedItem().toString();
        if (tableShowing.equalsIgnoreCase("Orders")){
            orderDashboardRT odrt = new orderDashboardRT();
            Thread t = new Thread(odrt);
            t.start();
            jScrollPane4.setVisible(false);
            jTable3.setVisible(false);
            jScrollPane3.setBounds(100, 150, 400, 400);
            jScrollPane3.setVisible(true);
            jTable2.setVisible(true);
            jComboBox4.setVisible(true);             
        } else if (tableShowing.equalsIgnoreCase("Staff Activities")){
            staffActivitiesDashboardRT sadrt = new staffActivitiesDashboardRT();
            Thread t = new Thread(sadrt);
            t.start();
            jScrollPane3.setVisible(false);
            jTable2.setVisible(false);
            jComboBox4.setVisible(false);
            jScrollPane4.setBounds(100, 150, 400, 400);
            jScrollPane4.setVisible(true);
            jTable3.setVisible(true);
        } 
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        orderDashboardRT odrt = new orderDashboardRT();
        Thread t = new Thread(odrt);
        t.start();
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        /*if (HoUName == null) {
            JOptionPane.showMessageDialog(rootPane, "No Head of Unit logged in. Please login and try again!", "WARNING!", 2);
        } else { 
        
        }*/
        try {
            DefaultTableModel tm = (DefaultTableModel) jTable2.getModel();
            DefaultTableModel tm2 = (DefaultTableModel) jTable5.getModel();
            int row = jTable2.getSelectedRow();
            int orderID = Integer.valueOf(tm.getValueAt(row, 0).toString());            
            tm2.setRowCount(0);
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafeteriamanagement", "root", env.Password);
            System.out.println("connected");
            
            PreparedStatement ps = con.prepareStatement("select * from items where order_id=?");            
            ps.setInt(1, orderID);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String portion = String.valueOf(rs.getInt(2));
                String price = String.valueOf(rs.getInt(3));
                String menu_item = rs.getString(1);

                String[] row2 = {menu_item, portion, price};
                tm2.addRow(row2);
            }
            jTable5.setModel(tm2);
            jTable5.setVisible(true);
            jScrollPane6.setBounds(100, 400, 400, 400);            
            jScrollPane6.setVisible(true);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jTable2MouseClicked
       
    
    private void refreshTable() {
        try{
            DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
            tm.setRowCount(0);
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafeteriamanagement", "root", env.Password);
            System.out.println("connected");
            PreparedStatement ps = con.prepareStatement("select * from menu");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String menuItem = rs.getString(1);
                int portionsAvailable1 = rs.getInt(2);
                int price1 = rs.getInt(3);
                
                String price = String.valueOf(price1);
                String portionsAvailable = String.valueOf(portionsAvailable1);
                String[] row = {menuItem, portionsAvailable, price};
                tm.addRow(row);
            }
            jTable1.setModel(tm);
        }
        catch(Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Unable to read from DB.");
        }
    }
    
    private void getInsights() {
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafeteriamanagement", "root", env.Password);
            System.out.println("connected");
            PreparedStatement ps = con.prepareStatement("select menu_item, sum(portions_ordered) as total_qty_ordered from items group by menu_item order by total_qty_ordered desc limit 1");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                jLabel2.setHorizontalAlignment(SwingConstants.CENTER);
                jLabel2.setVerticalAlignment(SwingConstants.CENTER);
                jLabel2.setText(rs.getString(1));
                jLabel3.setText(Integer.toString(rs.getInt(2)) + " Orders");
            }
            
            PreparedStatement ps2 = con.prepareStatement("select ticket_by, count(order_id) as tickets from orders group by ticket_by order by tickets desc limit 1");
            ResultSet rs2 = ps2.executeQuery();
            while (rs2.next()) {
                jLabel11.setHorizontalAlignment(SwingConstants.CENTER);
                jLabel11.setVerticalAlignment(SwingConstants.CENTER);
                jLabel11.setText(rs2.getString(1));
                jLabel12.setText(Integer.toString(rs2.getInt(2)) + " Orders Taken");
            }
            
            PreparedStatement ps3 = con.prepareStatement("select served_by, count(order_id) as tickets from orders group by served_by order by tickets desc limit 1");
            ResultSet rs3 = ps3.executeQuery();
            while (rs3.next()) {
                jLabel22.setHorizontalAlignment(SwingConstants.CENTER);
                jLabel22.setVerticalAlignment(SwingConstants.CENTER);
                jLabel22.setText(rs3.getString(1));
                jLabel23.setText(Integer.toString(rs3.getInt(2)) + " Orders Served");
            }
        }
        catch(Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Unable to read from DB.");
        }
    }
    
    private void setIcon() {
        Image image = Toolkit.getDefaultToolkit().createImage(env.Path);
        ImageIcon tempIcon = new ImageIcon(image);
        Image originalImage = tempIcon.getImage();

        int labelWidth = jLabel2.getWidth();
        int labelHeight = jLabel2.getHeight();
        int imageWidth = originalImage.getWidth(null);
        int imageHeight = originalImage.getHeight(null);

        // Calculate the aspect-ratio and scaling down accordingly
        double widthRatio = (double) labelWidth / imageWidth;
        double heightRatio = (double) labelHeight / imageHeight;
        double scaleFactor = Math.min(widthRatio, heightRatio);
        int scaledWidth = (int) (imageWidth * scaleFactor);
        int scaledHeight = (int) (imageHeight * scaleFactor);

        Image scaledImage = originalImage.getScaledInstance(scaledWidth, scaledHeight, Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(scaledImage);

        // Center the icon in the label
        jLabel5.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel5.setVerticalAlignment(SwingConstants.CENTER);
        jLabel5.setIcon(icon);
        jLabel14.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel14.setVerticalAlignment(SwingConstants.CENTER);
        jLabel14.setIcon(icon);
        jLabel25.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel25.setVerticalAlignment(SwingConstants.CENTER);
        jLabel25.setIcon(icon);
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(headOfUnitHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(headOfUnitHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(headOfUnitHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(headOfUnitHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            private String name;
            public void run() {
                new headOfUnitHome(name).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    public static javax.swing.JComboBox<String> jComboBox4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JTable jTable2;
    public static javax.swing.JTable jTable3;
    public static javax.swing.JTable jTable5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField13;
    // End of variables declaration//GEN-END:variables
}
